[core]
	editor = code --wait
	autocrlf = true
	preloadindex = true # perf
	fscache = true # perf

[gc]
	auto = 256 # perf

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[push]
	autoSetupRemote = true

[init]
	defaultBranch = main

[alias]
	# show all aliases
	alias = --list-cmds=alias
	# send empty commit to re-trigger build server
	nudge = !git commit --allow-empty -m 'trigger build' && git push
	# remove all local changes / files
	nuke = !git reset --hard HEAD && git clean -xfd
	# rollback the most recent commit and plaec in staging
	undo = reset --soft HEAD~1
	# checkout
	co = checkout
	# checkout previous commit
	prev = checkout HEAD~1
	# add local changes to previous commit
	patch = !git add . && git commit --amend --no-edit
	# show logs of last 10 commits
	recent = log --oneline -n 10
	# amend last commit
	amend = commit --amend
	# force push
	fp = push --force-with-lease
	# remove all local branches except default
	cleanup = "!f() { \
		defaultBranch=$(git rev-parse --abbrev-ref origin/HEAD | sed 's/origin\\///'); \
		echo git checkout $defaultBranch; \
		git checkout $defaultBranch &&  \
		git branch | grep -v \\* | xargs git branch -D; \
	}; \
	f; \
	unset f"
	# merge laster version of master into current branch
	refresh = "!f() { \
		defaultBranch=$(git rev-parse --abbrev-ref origin/HEAD | sed 's/origin\\///'); \
		echo git checkout $defaultBranch; \
		git checkout $defaultBranch &&  \
		echo git fetch && \
		git fetch && \
		echo git pull && \
		git pull && \
		echo git checkout - && \
		git checkout - && \
		echo git merge $defaultBranch && \
		git merge $defaultBranch && \
		echo git push && \
		git push; \
	}; \
	f; \
	unset f"
